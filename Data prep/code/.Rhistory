)
View(legend_grob)
# 2. Remove legend from all plots
plots_no_legend <- lapply(plots_list, function(p) {
p + theme(legend.position = "none")
})
# 3. Arrange those no-legend plots in a grid
plots_grid <- plot_grid(plotlist = plots_no_legend, ncol = 4)
# 4. Stack the grid and the legend
final_plot <- plot_grid(
plots_grid,
legend_grob,
ncol = 1,
rel_heights = c(10, 1)
)
final_plot
# 4. Stack the grid and the legend
final_plot <- plot_grid(
plots_grid,
legend_grob,
ncol = 2,
rel_widths = c(4, 1)   # left is wider, right is narrower
)
final_plot
# 4. Stack the grid and the legend
final_plot <- plot_grid(
plots_grid,
legend_grob,
ncol = 2,
rel_widths = c(6, 1)   # left is wider, right is narrower
)
final_plot
title_grob <- ggdraw() +
draw_label(
"Actual Compared to Predicted Age at Death Intervals",
fontface = "bold",
x = 0.5,       # center horizontally
hjust = 0.5,   # center alignment
size = 16      # make title text larger
)
# 6) Stack the title grob on top of the final plot
final_plot_with_title <- plot_grid(
title_grob,
final_plot,
ncol = 1,
rel_heights = c(0.08, 1)  # adjust the top margin vs. plot area
)
final_plot_with_title
plot2 <- ggplot(dt, aes(x = `Lower interval`, y = `Higher interval`, color = age_predicted)) +
geom_point() +
theme_minimal() +
labs(
x = "Lower Interval",
y = "Higher Interval",
color = "Predicted Age",
title = "Scatter Plot of Lower vs Higher Interval Colored by Predicted Age"
)
plot2
colnames(dt)
#-------------------------------------------------------------------------------
# This code unifies factors to be used in analysis
#-------------------------------------------------------------------------------
rm(list = ls())
library(dplyr)
library(readxl)
library(openxlsx)
# dir
dir1 <- "../intermediate/"
dt <- read_excel(paste0(dir1, "01_unified_variables.xlsx"))
# Kaulai femur and dentine fix
mityba <- c(
"d13C‰ (kaulas)", "d13C‰ (dentinas)",
"d15N‰ (kaulas)", "d15N‰ (dentinas)"
)
for (col in mityba) {
dt[[col]] <- sapply(dt[[col]], function(x) {
x <- gsub(",", ".", x, fixed = TRUE)
gsub("\\s+", "", x)
})
}
dt <- dt %>%
mutate(`d13C‰ (kaulas)` = ifelse(`d13C‰ (kaulas)` %in%
c("AB", "Nera", "NERA",
"A", "kartoti", "AS", "-"),
NA, `d13C‰ (kaulas)`),
`d13C‰ (dentinas)` = ifelse(`d13C‰ (dentinas)`
%in% c("AB", "Nera", "NERA",
"A", "kartoti", "AS", "-"),
NA, `d13C‰ (dentinas)`),
`d15N‰ (kaulas)` = ifelse(`d15N‰ (kaulas)`
%in% c("AB", "Nera", "NERA",
"A", "kartoti", "AS", "-"),
NA, `d15N‰ (kaulas)`),
`d15N‰ (dentinas)` = ifelse(`d15N‰ (dentinas)`
%in% c("AB", "Nera", "NERA",
"A", "kartoti", "AS", "-"),
NA, `d15N‰ (dentinas)`))
dt[, mityba] <- lapply(dt[, mityba], function(x) as.numeric(x))
dt <- dt %>%
rename(`d13C‰ (bone)` = `d13C‰ (kaulas)`,
`d13C‰ (dentine)` = `d13C‰ (dentinas)`,
`d15N‰ (bone)` = `d15N‰ (kaulas)`,
`d15N‰ (dentine)` = `d15N‰ (dentinas)`)
# Cribra orbitalia
dt <- dt %>%
mutate(`Cribra 1` = case_when(
`Cribra orbitalia` %in%
c("cribra1", "cribra 1") ~ 1,
`Cribra orbitalia` %in%
c("0", "cribra2", "Cribra2", "cribra3") ~ 0
)) %>%
mutate(`Cribra 2` = case_when(
`Cribra orbitalia` %in%
c("cribra2", "Cribra2") ~ 1,
`Cribra orbitalia` %in%
c("0", "cribra1", "cribra 1", "cribra3") ~ 0
)) %>%
mutate(`Cribra 3` = case_when(
`Cribra orbitalia` %in% "cribra3" ~ 1,
`Cribra orbitalia` %in%
c("0", "cribra2", "Cribra2", "cribra1", "cribra 1") ~ 0
)) %>%
mutate(`Cribra orbitalia` = case_when(
`Cribra orbitalia` %in%
c("cribra1", "cribra 1", "cribra2", "Cribra2", "cribra3") ~ 1,
`Cribra orbitalia` == "0" ~ 0
)) %>%
mutate(`Cribra orbitalia stages` = case_when(`Cribra 1` == 1 ~ 1,
`Cribra 2` == 1 ~ 2,
`Cribra 3` == 1 ~ 3,
TRUE ~ `Cribra orbitalia`))
# (Osteo)periostitas
dt <- dt %>%
mutate(`(Osteo)periostitas` = ifelse(`(Osteo)periostitas` != "0" &
!is.na(`(Osteo)periostitas`),
1, `(Osteo)periostitas`)) %>%
mutate(`periostitas 1` = case_when(`Periostitas1-2` %in% c("1") ~ 1,
`Periostitas1-2` %in% c("0", "2") ~ 0)) %>%
mutate(`periostitas 2` = case_when(`Periostitas1-2` == "2" ~ 1,
`Periostitas1-2` %in% c("1", "0") ~ 0)) %>%
rename(`(Osteo)periostitis` = `(Osteo)periostitas`,
`Periostitis 1` = `periostitas 1`,
`Periostitis 2` = `periostitas 2`,
`(Osteo)periostitis stages` = `Periostitas1-2`)
# TB
dt <- dt %>%
mutate(TB = ifelse(`TB` != "0" & !is.na(`TB`), 1, TB))
# teeth
teeth_cols_cat <- c("Calculus", "LEH")
teeth_cols_con <- c("Caries Freq", "AMTL Freq", "DMI", "ICE", "Abscess Freq",
"av M1 wear", "av M2 wear")
dt <- dt %>%
mutate(across(all_of(teeth_cols_con), ~ as.numeric(gsub(",", ".", .)))) %>%
mutate(across(all_of(teeth_cols_cat), ~ as.factor(gsub(",", ".", .))))
# Injuries
dt <- dt %>%
rename(Kaukole_traumos = `Kaukole...48`) %>%
mutate(Šonkauliai = ifelse(Šonkauliai != "0" &
!is.na(Šonkauliai), 1, Šonkauliai)) %>%
mutate(Kaukole_traumos = ifelse(Kaukole_traumos != "0" &
!is.na(Kaukole_traumos),
1, Kaukole_traumos)) %>%
mutate(Stuburas = ifelse(Stuburas != "0" & !is.na(Stuburas),
1, Stuburas)) %>%
mutate(Raktikaulis = ifelse(Raktikaulis != "0" &
!is.na(Raktikaulis), 1, Raktikaulis)) %>%
mutate(Žastikaulis = ifelse(Žastikaulis != "0" &
!is.na(Žastikaulis), 1, Žastikaulis)) %>%
mutate(Dilbis = ifelse(Dilbis != "0" & !is.na(Dilbis), 1, Dilbis)) %>%
mutate(Dubenkaulis = ifelse(Dubenkaulis != "0" &
!is.na(Dubenkaulis), 1, Dubenkaulis)) %>%
mutate(Šlaunikaulis = ifelse(Šlaunikaulis != "0" &
!is.na(Šlaunikaulis), 1, Šlaunikaulis)) %>%
mutate(Blauzda = ifelse(Blauzda != "0" & !is.na(Blauzda), 1, Blauzda)) %>%
mutate(Injuries = ifelse(`AM/PM` != "0" & !is.na(`AM/PM`), 1, `AM/PM`)) %>%
mutate(`K humerus` = gsub("\\*", "", `K humerus`)) %>%
mutate(`D+K humerus avg.` =
(as.numeric(`D humerus`) + as.numeric(`K humerus`)) / 2) %>%
mutate(`D+K femur avg.` =
(as.numeric(`D femur`) + as.numeric(`K femur`)) / 2) %>%
rename(Ribs = Šonkauliai,
Skull = Kaukole_traumos,
Spine = Stuburas,
Clavicle = Raktikaulis,
Humerus = Žastikaulis,
Forearm = Dilbis,
`Hip bone` = Dubenkaulis,
Femur = Šlaunikaulis,
`Tibia + Fibula` = Blauzda)
# LEH
dt <- dt %>%
mutate(`LEH 1` = case_when(
`LEH` %in% c("1") ~ "1",
`LEH` %in% c("0", "2") ~ "0"
)) %>%
mutate(`LEH 2` = case_when(
`LEH` == "2" ~ "1",
`LEH` %in% c("1", "0") ~ "0"
)) %>%
mutate(`LEH stages` = LEH) %>%
mutate(LEH = case_when(LEH %in% c("1", "2") ~ "1",
TRUE ~ LEH))
dt <- dt %>%
rename(Confession = Religion,
Sex = Gender)
# Summary with NA values
used_drivers <- c("Cribra orbitalia", "TB", "(Osteo)periostitis", "LEH",
"Period", "Sex", "SES", "Confession",
"d13C‰ (bone)", "d13C‰ (dentine)", "d15N‰ (bone)",
"d15N‰ (dentine)", "D+K humerus avg.", "D+K femur avg.",
"Caries Freq", "AMTL Freq", "Injuries count",
"Average age")
summary_list <- list()
i <- 1
for (var_name in used_drivers) {
col_data <- dt[[var_name]]
n_nonNA <- sum(!is.na(col_data))
if (is.numeric(col_data)) {
min_val  <- min(col_data, na.rm = TRUE)
max_val  <- max(col_data, na.rm = TRUE)
mean_val <- mean(col_data, na.rm = TRUE)
summary_list[[i]] <- data.frame(
Variable = var_name,
N_nonNA  = n_nonNA,
Min      = min_val,
Max      = max_val,
Mean     = mean_val
)
} else {
summary_list[[i]] <- data.frame(
Variable = var_name,
N_nonNA  = n_nonNA,
Min      = NA,
Max      = NA,
Mean     = NA
)
}
i <- i + 1
}
summary_df <- do.call(rbind, summary_list)
View(summary_df)
cols_numeric <- c("Cribra orbitalia", "TB", "(Osteo)periostitis", "LEH")
# Convert each to numeric (in case they're not already)
for (col_name in cols_numeric) {
dt[[col_name]] <- as.numeric(dt[[col_name]])
}
used_drivers <- c("Cribra orbitalia", "TB", "(Osteo)periostitis", "LEH",
"Period", "Sex", "SES", "Confession",
"d13C‰ (bone)", "d13C‰ (dentine)", "d15N‰ (bone)",
"d15N‰ (dentine)", "D+K humerus avg.", "D+K femur avg.",
"Caries Freq", "AMTL Freq", "Injuries count",
"Average age")
summary_list <- list()
i <- 1
for (var_name in used_drivers) {
col_data <- dt[[var_name]]
n_nonNA <- sum(!is.na(col_data))
if (is.numeric(col_data)) {
min_val  <- min(col_data, na.rm = TRUE)
max_val  <- max(col_data, na.rm = TRUE)
mean_val <- mean(col_data, na.rm = TRUE)
summary_list[[i]] <- data.frame(
Variable = var_name,
N_nonNA  = n_nonNA,
Min      = min_val,
Max      = max_val,
Mean     = mean_val
)
} else {
summary_list[[i]] <- data.frame(
Variable = var_name,
N_nonNA  = n_nonNA,
Min      = NA,
Max      = NA,
Mean     = NA
)
}
i <- i + 1
}
summary_df <- do.call(rbind, summary_list)
View(summary_df)
rm(list = ls())
library(dplyr)
library(readxl)
library(tidyr)
library(mice)
library(parallel)
library(future.apply)
# dir
dir1 <- "../data/"
dir2 <- "../intermediate/"
source("./functions.R")
# import data
dt <- read_excel(paste0(dir2, "02_unified_factors.xlsx"))
# prep for imputation
dt_predict <- dt %>%
mutate(Age = ifelse(grepl(">", Age),
paste0(gsub(">", "", Age), "+"), Age)) %>%
mutate(Age = ifelse(grepl("<", Age),
paste0(gsub("<", "", Age), "-"), Age)) %>%
mutate(
`Can Predict` =
ifelse(is.na(`d13C‰ (bone)`) & is.na(`d13C‰ (dentine)`) &
is.na(`d15N‰ (bone)`) & is.na(`d15N‰ (dentine)`) &
is.na(`D+K humerus avg.`) & is.na(`D+K femur avg.`) &
is.na(`Caries Freq`) & is.na(`AMTL Freq`) & is.na(Injuries),
FALSE,
TRUE
)
)
# creating column with injuries count, as it can be good measure for age
injuries <- c(
"Ribs", "Skull", "Spine", "Clavicle", "Humerus",
"Forearm", "Hip bone", "Femur", "Tibia + Fibula"
)
dt_predict <- dt_predict %>%
rowwise() %>%
mutate(
`Injuries count` = if (all(is.na(c_across(all_of(injuries))))) {
NA
} else if (sum(as.numeric(c_across(all_of(injuries))), na.rm = TRUE) == 0) {
0
} else {
sum(as.numeric(c_across(all_of(injuries))) == 1, na.rm = TRUE)
}
) %>%
ungroup()
length(na.omit(dt_predict[["Injuries count"]]))
min(na.omit(dt_predict[["Injuries count"]]))
max(na.omit(dt_predict[["Injuries count"]]))
mean(na.omit(dt_predict[["Injuries count"]]))
#-------------------------------------------------------------------------------
# This code unifies factors to be used in analysis
#-------------------------------------------------------------------------------
rm(list = ls())
library(dplyr)
library(readxl)
library(openxlsx)
# dir
dir1 <- "../intermediate/"
dt <- read_excel(paste0(dir1, "01_unified_variables.xlsx"))
# Kaulai femur and dentine fix
mityba <- c(
"d13C‰ (kaulas)", "d13C‰ (dentinas)",
"d15N‰ (kaulas)", "d15N‰ (dentinas)"
)
for (col in mityba) {
dt[[col]] <- sapply(dt[[col]], function(x) {
x <- gsub(",", ".", x, fixed = TRUE)
gsub("\\s+", "", x)
})
}
dt <- dt %>%
mutate(`d13C‰ (kaulas)` = ifelse(`d13C‰ (kaulas)` %in%
c("AB", "Nera", "NERA",
"A", "kartoti", "AS", "-"),
NA, `d13C‰ (kaulas)`),
`d13C‰ (dentinas)` = ifelse(`d13C‰ (dentinas)`
%in% c("AB", "Nera", "NERA",
"A", "kartoti", "AS", "-"),
NA, `d13C‰ (dentinas)`),
`d15N‰ (kaulas)` = ifelse(`d15N‰ (kaulas)`
%in% c("AB", "Nera", "NERA",
"A", "kartoti", "AS", "-"),
NA, `d15N‰ (kaulas)`),
`d15N‰ (dentinas)` = ifelse(`d15N‰ (dentinas)`
%in% c("AB", "Nera", "NERA",
"A", "kartoti", "AS", "-"),
NA, `d15N‰ (dentinas)`))
dt[, mityba] <- lapply(dt[, mityba], function(x) as.numeric(x))
dt <- dt %>%
rename(`d13C‰ (bone)` = `d13C‰ (kaulas)`,
`d13C‰ (dentine)` = `d13C‰ (dentinas)`,
`d15N‰ (bone)` = `d15N‰ (kaulas)`,
`d15N‰ (dentine)` = `d15N‰ (dentinas)`)
# Cribra orbitalia
dt <- dt %>%
mutate(`Cribra 1` = case_when(
`Cribra orbitalia` %in%
c("cribra1", "cribra 1") ~ 1,
`Cribra orbitalia` %in%
c("0", "cribra2", "Cribra2", "cribra3") ~ 0
)) %>%
mutate(`Cribra 2` = case_when(
`Cribra orbitalia` %in%
c("cribra2", "Cribra2") ~ 1,
`Cribra orbitalia` %in%
c("0", "cribra1", "cribra 1", "cribra3") ~ 0
)) %>%
mutate(`Cribra 3` = case_when(
`Cribra orbitalia` %in% "cribra3" ~ 1,
`Cribra orbitalia` %in%
c("0", "cribra2", "Cribra2", "cribra1", "cribra 1") ~ 0
)) %>%
mutate(`Cribra orbitalia` = case_when(
`Cribra orbitalia` %in%
c("cribra1", "cribra 1", "cribra2", "Cribra2", "cribra3") ~ 1,
`Cribra orbitalia` == "0" ~ 0
)) %>%
mutate(`Cribra orbitalia stages` = case_when(`Cribra 1` == 1 ~ 1,
`Cribra 2` == 1 ~ 2,
`Cribra 3` == 1 ~ 3,
TRUE ~ `Cribra orbitalia`))
# (Osteo)periostitas
dt <- dt %>%
mutate(`(Osteo)periostitas` = ifelse(`(Osteo)periostitas` != "0" &
!is.na(`(Osteo)periostitas`),
1, `(Osteo)periostitas`)) %>%
mutate(`periostitas 1` = case_when(`Periostitas1-2` %in% c("1") ~ 1,
`Periostitas1-2` %in% c("0", "2") ~ 0)) %>%
mutate(`periostitas 2` = case_when(`Periostitas1-2` == "2" ~ 1,
`Periostitas1-2` %in% c("1", "0") ~ 0)) %>%
rename(`(Osteo)periostitis` = `(Osteo)periostitas`,
`Periostitis 1` = `periostitas 1`,
`Periostitis 2` = `periostitas 2`,
`(Osteo)periostitis stages` = `Periostitas1-2`)
# TB
dt <- dt %>%
mutate(TB = ifelse(`TB` != "0" & !is.na(`TB`), 1, TB))
# teeth
teeth_cols_cat <- c("Calculus", "LEH")
teeth_cols_con <- c("Caries Freq", "AMTL Freq", "DMI", "ICE", "Abscess Freq",
"av M1 wear", "av M2 wear")
dt <- dt %>%
mutate(across(all_of(teeth_cols_con), ~ as.numeric(gsub(",", ".", .)))) %>%
mutate(across(all_of(teeth_cols_cat), ~ as.factor(gsub(",", ".", .))))
# Injuries
dt <- dt %>%
rename(Kaukole_traumos = `Kaukole...48`) %>%
mutate(Šonkauliai = ifelse(Šonkauliai != "0" &
!is.na(Šonkauliai), 1, Šonkauliai)) %>%
mutate(Kaukole_traumos = ifelse(Kaukole_traumos != "0" &
!is.na(Kaukole_traumos),
1, Kaukole_traumos)) %>%
mutate(Stuburas = ifelse(Stuburas != "0" & !is.na(Stuburas),
1, Stuburas)) %>%
mutate(Raktikaulis = ifelse(Raktikaulis != "0" &
!is.na(Raktikaulis), 1, Raktikaulis)) %>%
mutate(Žastikaulis = ifelse(Žastikaulis != "0" &
!is.na(Žastikaulis), 1, Žastikaulis)) %>%
mutate(Dilbis = ifelse(Dilbis != "0" & !is.na(Dilbis), 1, Dilbis)) %>%
mutate(Dubenkaulis = ifelse(Dubenkaulis != "0" &
!is.na(Dubenkaulis), 1, Dubenkaulis)) %>%
mutate(Šlaunikaulis = ifelse(Šlaunikaulis != "0" &
!is.na(Šlaunikaulis), 1, Šlaunikaulis)) %>%
mutate(Blauzda = ifelse(Blauzda != "0" & !is.na(Blauzda), 1, Blauzda)) %>%
mutate(Injuries = ifelse(`AM/PM` != "0" & !is.na(`AM/PM`), 1, `AM/PM`)) %>%
mutate(`K humerus` = gsub("\\*", "", `K humerus`)) %>%
mutate(`D+K humerus avg.` =
(as.numeric(`D humerus`) + as.numeric(`K humerus`)) / 2) %>%
mutate(`D+K femur avg.` =
(as.numeric(`D femur`) + as.numeric(`K femur`)) / 2) %>%
rename(Ribs = Šonkauliai,
Skull = Kaukole_traumos,
Spine = Stuburas,
Clavicle = Raktikaulis,
Humerus = Žastikaulis,
Forearm = Dilbis,
`Hip bone` = Dubenkaulis,
Femur = Šlaunikaulis,
`Tibia + Fibula` = Blauzda)
# LEH
dt <- dt %>%
mutate(`LEH 1` = case_when(
`LEH` %in% c("1") ~ "1",
`LEH` %in% c("0", "2") ~ "0"
)) %>%
mutate(`LEH 2` = case_when(
`LEH` == "2" ~ "1",
`LEH` %in% c("1", "0") ~ "0"
)) %>%
mutate(`LEH stages` = LEH) %>%
mutate(LEH = case_when(LEH %in% c("1", "2") ~ "1",
TRUE ~ LEH))
dt <- dt %>%
rename(Confession = Religion,
Sex = Gender)
used_drivers <- c("Cribra orbitalia", "TB", "(Osteo)periostitis", "LEH",
"Period", "Sex", "SES", "Confession",
"d13C‰ (bone)", "d13C‰ (dentine)", "d15N‰ (bone)",
"d15N‰ (dentine)", "D+K humerus avg.", "D+K femur avg.",
"Caries Freq", "AMTL Freq", "Injuries count",
"Average age")
summary_list <- list()
i <- 1
for (var_name in used_drivers) {
col_data <- dt[[var_name]]
n_nonNA <- sum(!is.na(col_data))
if (is.numeric(col_data)) {
min_val  <- min(col_data, na.rm = TRUE)
max_val  <- max(col_data, na.rm = TRUE)
mean_val <- mean(col_data, na.rm = TRUE)
summary_list[[i]] <- data.frame(
Variable = var_name,
N_nonNA  = n_nonNA,
Min      = min_val,
Max      = max_val,
Mean     = mean_val
)
} else {
summary_list[[i]] <- data.frame(
Variable = var_name,
N_nonNA  = n_nonNA,
Min      = NA,
Max      = NA,
Mean     = NA
)
}
i <- i + 1
}
summary_df <- do.call(rbind, summary_list)
View(summary_df)
